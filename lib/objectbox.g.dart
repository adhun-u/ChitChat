// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'features/group/domain/entities/chat_storage/group_chat_storage_model.dart';
import 'features/home/domain/entities/chat_storage/chat_storage_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 218351699053391798),
      name: 'ChatStorageDBModel',
      lastPropertyId: const obx_int.IdUid(23, 7604792210188037937),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6153779676110007338),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5096259515899216031),
            name: 'chatId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 998232071394628643),
            name: 'senderId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5896000198130035342),
            name: 'receiverId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5246764656868370287),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3388501212580648335),
            name: 'message',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4458518419404106749),
            name: 'imagePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7866333006207120085),
            name: 'imageText',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 4933031330570012880),
            name: 'date',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4497092748683642063),
            name: 'isSeen',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 4415847011124497722),
            name: 'isRead',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 8325641881323584716),
            name: 'isDownloaded',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 7485629067070777527),
            name: 'audioPath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 5487761943506443566),
            name: 'audioDuration',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 4242025309203090099),
            name: 'audioTitle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 2252945730231037406),
            name: 'voicePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 4215674542787408038),
            name: 'voiceDuration',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 4244916911781440444),
            name: 'repliedMessage',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 9126601962838958944),
            name: 'parentMessageSenderId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 1591341463365786609),
            name: 'parentMessageType',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 1866515552839086174),
            name: 'parentText',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 7874972919448692350),
            name: 'parentVoiceDuration',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 7604792210188037937),
            name: 'parentAudioDuration',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 9087780132147786347),
      name: 'GroupChatStorageModel',
      lastPropertyId: const obx_int.IdUid(25, 3000618923159464930),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8297744603043531106),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1875182783980071474),
            name: 'groupId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3886656383461270430),
            name: 'chatId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7931052875429661181),
            name: 'senderId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8130981539411578458),
            name: 'senderName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2576216531967279681),
            name: 'messageType',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5921913683600382286),
            name: 'textMessage',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 5847368287935957206),
            name: 'imagePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 2763664239809137231),
            name: 'imageText',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 1022546466590444828),
            name: 'audioPath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5473848878481449474),
            name: 'audioDuration',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 1174015941693400451),
            name: 'audioTitle',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 3252334271204550568),
            name: 'voicePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 1717274017294620463),
            name: 'voiceDuration',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 8660441874589153240),
            name: 'time',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 6062392270225486992),
            name: 'isSeen',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 6102743673180927001),
            name: 'isRead',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 1527211542001764559),
            name: 'isMediaDownloaded',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 9223173413784567345),
            name: 'repliedMessage',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 1911300684094624803),
            name: 'parentMessageSenderId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 2129262729243786350),
            name: 'parentMessageType',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 7966301913427072457),
            name: 'parentText',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 5452851288775049982),
            name: 'parentVoiceDuration',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(24, 7481307443383660848),
            name: 'parentAudioDuration',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(25, 3000618923159464930),
            name: 'parentMessageSenderName',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(4, 9087780132147786347),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [3928513930006810759, 6156447958939554316],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        4943986424879201074,
        3469193543117747787,
        6193546582195674964,
        516870199422949825,
        8418501567547652626,
        508525468969123200,
        7539786616847142885,
        457234336563064843,
        6569146401856725357,
        7715810810496872400,
        5470335528421227343,
        3724124310741717524,
        9004029249623417540,
        5287050205635262078,
        8078993663462949339,
        712330105994214196,
        7446935313595837070,
        8529683867991981163,
        7927219538778181513,
        4936631070076327281,
        8232470670672765396,
        6666766926015491063,
        3605603351789068285,
        1579767084531100835,
        3988068121470180833,
        1666253183844286847,
        4102142300110936080,
        6557789406400974872,
        546554286667046961,
        8341998251116891399,
        4286983610811052111,
        8544602458304442627
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ChatStorageDBModel: obx_int.EntityDefinition<ChatStorageDBModel>(
        model: _entities[0],
        toOneRelations: (ChatStorageDBModel object) => [],
        toManyRelations: (ChatStorageDBModel object) => {},
        getId: (ChatStorageDBModel object) => object.id,
        setId: (ChatStorageDBModel object, int id) {
          object.id = id;
        },
        objectToFB: (ChatStorageDBModel object, fb.Builder fbb) {
          final chatIdOffset = fbb.writeString(object.chatId);
          final typeOffset = fbb.writeString(object.type);
          final messageOffset =
              object.message == null ? null : fbb.writeString(object.message!);
          final imagePathOffset = object.imagePath == null
              ? null
              : fbb.writeString(object.imagePath!);
          final imageTextOffset = object.imageText == null
              ? null
              : fbb.writeString(object.imageText!);
          final dateOffset = fbb.writeString(object.date);
          final audioPathOffset = fbb.writeString(object.audioPath);
          final audioDurationOffset = fbb.writeString(object.audioDuration);
          final audioTitleOffset = fbb.writeString(object.audioTitle);
          final voicePathOffset = fbb.writeString(object.voicePath);
          final voiceDurationOffset = fbb.writeString(object.voiceDuration);
          final parentMessageTypeOffset =
              fbb.writeString(object.parentMessageType);
          final parentTextOffset = fbb.writeString(object.parentText);
          final parentVoiceDurationOffset =
              fbb.writeString(object.parentVoiceDuration);
          final parentAudioDurationOffset =
              fbb.writeString(object.parentAudioDuration);
          fbb.startTable(24);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, chatIdOffset);
          fbb.addInt64(2, object.senderId);
          fbb.addInt64(3, object.receiverId);
          fbb.addOffset(4, typeOffset);
          fbb.addOffset(5, messageOffset);
          fbb.addOffset(6, imagePathOffset);
          fbb.addOffset(7, imageTextOffset);
          fbb.addOffset(8, dateOffset);
          fbb.addBool(9, object.isSeen);
          fbb.addBool(10, object.isRead);
          fbb.addBool(11, object.isDownloaded);
          fbb.addOffset(12, audioPathOffset);
          fbb.addOffset(13, audioDurationOffset);
          fbb.addOffset(14, audioTitleOffset);
          fbb.addOffset(15, voicePathOffset);
          fbb.addOffset(16, voiceDurationOffset);
          fbb.addBool(17, object.repliedMessage);
          fbb.addInt64(18, object.parentMessageSenderId);
          fbb.addOffset(19, parentMessageTypeOffset);
          fbb.addOffset(20, parentTextOffset);
          fbb.addOffset(21, parentVoiceDurationOffset);
          fbb.addOffset(22, parentAudioDurationOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final chatIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final senderIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final receiverIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final messageParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final imagePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final imageTextParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 18);
          final audioPathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 28, '');
          final audioDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 30, '');
          final audioTitleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 32, '');
          final voicePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 34, '');
          final voiceDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 36, '');
          final dateParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final isSeenParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 22, false);
          final isReadParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 24, false);
          final isDownloadedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 26, false);
          final repliedMessageParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 38, false);
          final parentAudioDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 48, '');
          final parentMessageSenderIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 40, 0);
          final parentMessageTypeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 42, '');
          final parentTextParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 44, '');
          final parentVoiceDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 46, '');
          final object = ChatStorageDBModel(
              chatId: chatIdParam,
              senderId: senderIdParam,
              receiverId: receiverIdParam,
              type: typeParam,
              message: messageParam,
              imagePath: imagePathParam,
              imageText: imageTextParam,
              audioPath: audioPathParam,
              audioDuration: audioDurationParam,
              audioTitle: audioTitleParam,
              voicePath: voicePathParam,
              voiceDuration: voiceDurationParam,
              date: dateParam,
              isSeen: isSeenParam,
              isRead: isReadParam,
              isDownloaded: isDownloadedParam,
              repliedMessage: repliedMessageParam,
              parentAudioDuration: parentAudioDurationParam,
              parentMessageSenderId: parentMessageSenderIdParam,
              parentMessageType: parentMessageTypeParam,
              parentText: parentTextParam,
              parentVoiceDuration: parentVoiceDurationParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    GroupChatStorageModel: obx_int.EntityDefinition<GroupChatStorageModel>(
        model: _entities[1],
        toOneRelations: (GroupChatStorageModel object) => [],
        toManyRelations: (GroupChatStorageModel object) => {},
        getId: (GroupChatStorageModel object) => object.id,
        setId: (GroupChatStorageModel object, int id) {
          object.id = id;
        },
        objectToFB: (GroupChatStorageModel object, fb.Builder fbb) {
          final groupIdOffset = fbb.writeString(object.groupId);
          final chatIdOffset = fbb.writeString(object.chatId);
          final senderNameOffset = fbb.writeString(object.senderName);
          final messageTypeOffset = fbb.writeString(object.messageType);
          final textMessageOffset = fbb.writeString(object.textMessage);
          final imagePathOffset = fbb.writeString(object.imagePath);
          final imageTextOffset = fbb.writeString(object.imageText);
          final audioPathOffset = fbb.writeString(object.audioPath);
          final audioDurationOffset = fbb.writeString(object.audioDuration);
          final audioTitleOffset = fbb.writeString(object.audioTitle);
          final voicePathOffset = fbb.writeString(object.voicePath);
          final voiceDurationOffset = fbb.writeString(object.voiceDuration);
          final timeOffset = fbb.writeString(object.time);
          final parentMessageTypeOffset =
              fbb.writeString(object.parentMessageType);
          final parentTextOffset = fbb.writeString(object.parentText);
          final parentVoiceDurationOffset =
              fbb.writeString(object.parentVoiceDuration);
          final parentAudioDurationOffset =
              fbb.writeString(object.parentAudioDuration);
          final parentMessageSenderNameOffset =
              fbb.writeString(object.parentMessageSenderName);
          fbb.startTable(26);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, groupIdOffset);
          fbb.addOffset(2, chatIdOffset);
          fbb.addInt64(3, object.senderId);
          fbb.addOffset(4, senderNameOffset);
          fbb.addOffset(5, messageTypeOffset);
          fbb.addOffset(6, textMessageOffset);
          fbb.addOffset(7, imagePathOffset);
          fbb.addOffset(8, imageTextOffset);
          fbb.addOffset(9, audioPathOffset);
          fbb.addOffset(10, audioDurationOffset);
          fbb.addOffset(11, audioTitleOffset);
          fbb.addOffset(12, voicePathOffset);
          fbb.addOffset(13, voiceDurationOffset);
          fbb.addOffset(14, timeOffset);
          fbb.addBool(15, object.isSeen);
          fbb.addBool(16, object.isRead);
          fbb.addBool(17, object.isMediaDownloaded);
          fbb.addBool(18, object.repliedMessage);
          fbb.addInt64(19, object.parentMessageSenderId);
          fbb.addOffset(20, parentMessageTypeOffset);
          fbb.addOffset(21, parentTextOffset);
          fbb.addOffset(22, parentVoiceDurationOffset);
          fbb.addOffset(23, parentAudioDurationOffset);
          fbb.addOffset(24, parentMessageSenderNameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final groupIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final chatIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final senderIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final senderNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final messageTypeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, '');
          final textMessageParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final imagePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final imageTextParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final audioPathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 22, '');
          final audioDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 24, '');
          final audioTitleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final voicePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 28, '');
          final voiceDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 30, '');
          final timeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 32, '');
          final isSeenParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 34, false);
          final isReadParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 36, false);
          final isMediaDownloadedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 38, false);
          final repliedMessageParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 40, false);
          final parentAudioDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 50, '');
          final parentMessageSenderIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 42, 0);
          final parentMessageSenderNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 52, '');
          final parentMessageTypeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 44, '');
          final parentTextParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 46, '');
          final parentVoiceDurationParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 48, '');
          final object = GroupChatStorageModel(
              groupId: groupIdParam,
              chatId: chatIdParam,
              senderId: senderIdParam,
              senderName: senderNameParam,
              messageType: messageTypeParam,
              textMessage: textMessageParam,
              imagePath: imagePathParam,
              imageText: imageTextParam,
              audioPath: audioPathParam,
              audioDuration: audioDurationParam,
              audioTitle: audioTitleParam,
              voicePath: voicePathParam,
              voiceDuration: voiceDurationParam,
              time: timeParam,
              isSeen: isSeenParam,
              isRead: isReadParam,
              isMediaDownloaded: isMediaDownloadedParam,
              repliedMessage: repliedMessageParam,
              parentAudioDuration: parentAudioDurationParam,
              parentMessageSenderId: parentMessageSenderIdParam,
              parentMessageSenderName: parentMessageSenderNameParam,
              parentMessageType: parentMessageTypeParam,
              parentText: parentTextParam,
              parentVoiceDuration: parentVoiceDurationParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ChatStorageDBModel] entity fields to define ObjectBox queries.
class ChatStorageDBModel_ {
  /// See [ChatStorageDBModel.id].
  static final id =
      obx.QueryIntegerProperty<ChatStorageDBModel>(_entities[0].properties[0]);

  /// See [ChatStorageDBModel.chatId].
  static final chatId =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[1]);

  /// See [ChatStorageDBModel.senderId].
  static final senderId =
      obx.QueryIntegerProperty<ChatStorageDBModel>(_entities[0].properties[2]);

  /// See [ChatStorageDBModel.receiverId].
  static final receiverId =
      obx.QueryIntegerProperty<ChatStorageDBModel>(_entities[0].properties[3]);

  /// See [ChatStorageDBModel.type].
  static final type =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[4]);

  /// See [ChatStorageDBModel.message].
  static final message =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[5]);

  /// See [ChatStorageDBModel.imagePath].
  static final imagePath =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[6]);

  /// See [ChatStorageDBModel.imageText].
  static final imageText =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[7]);

  /// See [ChatStorageDBModel.date].
  static final date =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[8]);

  /// See [ChatStorageDBModel.isSeen].
  static final isSeen =
      obx.QueryBooleanProperty<ChatStorageDBModel>(_entities[0].properties[9]);

  /// See [ChatStorageDBModel.isRead].
  static final isRead =
      obx.QueryBooleanProperty<ChatStorageDBModel>(_entities[0].properties[10]);

  /// See [ChatStorageDBModel.isDownloaded].
  static final isDownloaded =
      obx.QueryBooleanProperty<ChatStorageDBModel>(_entities[0].properties[11]);

  /// See [ChatStorageDBModel.audioPath].
  static final audioPath =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[12]);

  /// See [ChatStorageDBModel.audioDuration].
  static final audioDuration =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[13]);

  /// See [ChatStorageDBModel.audioTitle].
  static final audioTitle =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[14]);

  /// See [ChatStorageDBModel.voicePath].
  static final voicePath =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[15]);

  /// See [ChatStorageDBModel.voiceDuration].
  static final voiceDuration =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[16]);

  /// See [ChatStorageDBModel.repliedMessage].
  static final repliedMessage =
      obx.QueryBooleanProperty<ChatStorageDBModel>(_entities[0].properties[17]);

  /// See [ChatStorageDBModel.parentMessageSenderId].
  static final parentMessageSenderId =
      obx.QueryIntegerProperty<ChatStorageDBModel>(_entities[0].properties[18]);

  /// See [ChatStorageDBModel.parentMessageType].
  static final parentMessageType =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[19]);

  /// See [ChatStorageDBModel.parentText].
  static final parentText =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[20]);

  /// See [ChatStorageDBModel.parentVoiceDuration].
  static final parentVoiceDuration =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[21]);

  /// See [ChatStorageDBModel.parentAudioDuration].
  static final parentAudioDuration =
      obx.QueryStringProperty<ChatStorageDBModel>(_entities[0].properties[22]);
}

/// [GroupChatStorageModel] entity fields to define ObjectBox queries.
class GroupChatStorageModel_ {
  /// See [GroupChatStorageModel.id].
  static final id = obx.QueryIntegerProperty<GroupChatStorageModel>(
      _entities[1].properties[0]);

  /// See [GroupChatStorageModel.groupId].
  static final groupId = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[1]);

  /// See [GroupChatStorageModel.chatId].
  static final chatId = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[2]);

  /// See [GroupChatStorageModel.senderId].
  static final senderId = obx.QueryIntegerProperty<GroupChatStorageModel>(
      _entities[1].properties[3]);

  /// See [GroupChatStorageModel.senderName].
  static final senderName = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[4]);

  /// See [GroupChatStorageModel.messageType].
  static final messageType = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[5]);

  /// See [GroupChatStorageModel.textMessage].
  static final textMessage = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[6]);

  /// See [GroupChatStorageModel.imagePath].
  static final imagePath = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[7]);

  /// See [GroupChatStorageModel.imageText].
  static final imageText = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[8]);

  /// See [GroupChatStorageModel.audioPath].
  static final audioPath = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[9]);

  /// See [GroupChatStorageModel.audioDuration].
  static final audioDuration = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[10]);

  /// See [GroupChatStorageModel.audioTitle].
  static final audioTitle = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[11]);

  /// See [GroupChatStorageModel.voicePath].
  static final voicePath = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[12]);

  /// See [GroupChatStorageModel.voiceDuration].
  static final voiceDuration = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[13]);

  /// See [GroupChatStorageModel.time].
  static final time = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[14]);

  /// See [GroupChatStorageModel.isSeen].
  static final isSeen = obx.QueryBooleanProperty<GroupChatStorageModel>(
      _entities[1].properties[15]);

  /// See [GroupChatStorageModel.isRead].
  static final isRead = obx.QueryBooleanProperty<GroupChatStorageModel>(
      _entities[1].properties[16]);

  /// See [GroupChatStorageModel.isMediaDownloaded].
  static final isMediaDownloaded =
      obx.QueryBooleanProperty<GroupChatStorageModel>(
          _entities[1].properties[17]);

  /// See [GroupChatStorageModel.repliedMessage].
  static final repliedMessage = obx.QueryBooleanProperty<GroupChatStorageModel>(
      _entities[1].properties[18]);

  /// See [GroupChatStorageModel.parentMessageSenderId].
  static final parentMessageSenderId =
      obx.QueryIntegerProperty<GroupChatStorageModel>(
          _entities[1].properties[19]);

  /// See [GroupChatStorageModel.parentMessageType].
  static final parentMessageType =
      obx.QueryStringProperty<GroupChatStorageModel>(
          _entities[1].properties[20]);

  /// See [GroupChatStorageModel.parentText].
  static final parentText = obx.QueryStringProperty<GroupChatStorageModel>(
      _entities[1].properties[21]);

  /// See [GroupChatStorageModel.parentVoiceDuration].
  static final parentVoiceDuration =
      obx.QueryStringProperty<GroupChatStorageModel>(
          _entities[1].properties[22]);

  /// See [GroupChatStorageModel.parentAudioDuration].
  static final parentAudioDuration =
      obx.QueryStringProperty<GroupChatStorageModel>(
          _entities[1].properties[23]);

  /// See [GroupChatStorageModel.parentMessageSenderName].
  static final parentMessageSenderName =
      obx.QueryStringProperty<GroupChatStorageModel>(
          _entities[1].properties[24]);
}
